
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/documentation/builtinmodels_peakmodels.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_documentation_builtinmodels_peakmodels.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_documentation_builtinmodels_peakmodels.py:


doc_builtinmodels_peakmodels.py
===============================

.. GENERATED FROM PYTHON SOURCE LINES 7-67



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples/documentation/images/sphx_glr_builtinmodels_peakmodels_001.png
         :alt: builtinmodels peakmodels
         :srcset: /examples/documentation/images/sphx_glr_builtinmodels_peakmodels_001.png, /examples/documentation/images/sphx_glr_builtinmodels_peakmodels_001_3_0x.png 3.0x
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/documentation/images/sphx_glr_builtinmodels_peakmodels_002.png
         :alt: builtinmodels peakmodels
         :srcset: /examples/documentation/images/sphx_glr_builtinmodels_peakmodels_002.png, /examples/documentation/images/sphx_glr_builtinmodels_peakmodels_002_3_0x.png 3.0x
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/documentation/images/sphx_glr_builtinmodels_peakmodels_003.png
         :alt: builtinmodels peakmodels
         :srcset: /examples/documentation/images/sphx_glr_builtinmodels_peakmodels_003.png, /examples/documentation/images/sphx_glr_builtinmodels_peakmodels_003_3_0x.png 3.0x
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [[Model]]
        Model(gaussian)
    [[Fit Statistics]]
        # fitting method   = leastsq
        # function evals   = 25
        # data points      = 401
        # variables        = 3
        chi-square         = 29.9943157
        reduced chi-square = 0.07536260
        Akaike info crit   = -1033.77437
        Bayesian info crit = -1021.79248
        R-squared          = 0.99045513
    [[Variables]]
        amplitude:  30.3135620 +/- 0.15712686 (0.52%) (init = 43.62238)
        center:     9.24277047 +/- 0.00737496 (0.08%) (init = 9.25)
        sigma:      1.23218359 +/- 0.00737496 (0.60%) (init = 1.35)
        fwhm:       2.90157056 +/- 0.01736670 (0.60%) == '2.3548200*sigma'
        height:     9.81457817 +/- 0.05087283 (0.52%) == '0.3989423*amplitude/max(1e-15, sigma)'
    [[Correlations]] (unreported correlations are < 0.250)
        C(amplitude, sigma) = 0.577
    [[Model]]
        Model(lorentzian)
    [[Fit Statistics]]
        # fitting method   = leastsq
        # function evals   = 25
        # data points      = 401
        # variables        = 3
        chi-square         = 53.7535387
        reduced chi-square = 0.13505914
        Akaike info crit   = -799.830323
        Bayesian info crit = -787.848438
        R-squared          = 0.98289441
    [[Variables]]
        amplitude:  38.9726601 +/- 0.31386655 (0.81%) (init = 54.52798)
        center:     9.24438938 +/- 0.00927646 (0.10%) (init = 9.25)
        sigma:      1.15483308 +/- 0.01315692 (1.14%) (init = 1.35)
        fwhm:       2.30966615 +/- 0.02631383 (1.14%) == '2.0000000*sigma'
        height:     10.7421443 +/- 0.08634226 (0.80%) == '0.3183099*amplitude/max(1e-15, sigma)'
    [[Correlations]] (unreported correlations are < 0.250)
        C(amplitude, sigma) = 0.709
    [[Model]]
        Model(voigt)
    [[Fit Statistics]]
        # fitting method   = leastsq
        # function evals   = 25
        # data points      = 401
        # variables        = 3
        chi-square         = 14.5448627
        reduced chi-square = 0.03654488
        Akaike info crit   = -1324.00615
        Bayesian info crit = -1312.02427
        R-squared          = 0.99537150
    [[Variables]]
        amplitude:  35.7553874 +/- 0.13861508 (0.39%) (init = 65.43358)
        center:     9.24411135 +/- 0.00505496 (0.05%) (init = 9.25)
        sigma:      0.73015516 +/- 0.00368468 (0.50%) (init = 0.8775)
        gamma:      0.73015516 +/- 0.00368468 (0.50%) == 'sigma'
        fwhm:       2.62950094 +/- 0.00806917 (0.31%) == '1.0692*gamma+sqrt(0.8664*gamma**2+5.545083*sigma**2)'
        height:     10.2204046 +/- 0.03009459 (0.29%) == '(amplitude/(max(1e-15, sigma*sqrt(2*pi))))*wofz((1j*gamma)/(max(1e-15, sigma*sqrt(2)))).real'
    [[Correlations]] (unreported correlations are < 0.250)
        C(amplitude, sigma) = 0.651






|

.. code-block:: default

    # <examples/doc_builtinmodels_peakmodels.py>
    import matplotlib.pyplot as plt
    from numpy import loadtxt

    from lmfit.models import GaussianModel, LorentzianModel, VoigtModel

    data = loadtxt('test_peak.dat')
    x = data[:, 0]
    y = data[:, 1]


    # Gaussian model
    mod = GaussianModel()
    pars = mod.guess(y, x=x)
    out = mod.fit(y, pars, x=x)

    print(out.fit_report(min_correl=0.25))

    plt.plot(x, y)
    plt.plot(x, out.best_fit, '-', label='Gaussian Model')
    plt.legend()
    plt.show()


    # Lorentzian model
    mod = LorentzianModel()
    pars = mod.guess(y, x=x)
    out = mod.fit(y, pars, x=x)

    print(out.fit_report(min_correl=0.25))

    plt.figure()
    plt.plot(x, y, '-')
    plt.plot(x, out.best_fit, '-', label='Lorentzian Model')
    plt.legend()
    plt.show()


    # Voigt model
    mod = VoigtModel()
    pars = mod.guess(y, x=x)
    out = mod.fit(y, pars, x=x)

    print(out.fit_report(min_correl=0.25))

    fig, axes = plt.subplots(1, 2, figsize=(12.8, 4.8))

    axes[0].plot(x, y, '-')
    axes[0].plot(x, out.best_fit, '-', label='Voigt Model\ngamma constrained')
    axes[0].legend()

    # free gamma parameter
    pars['gamma'].set(value=0.7, vary=True, expr='')
    out_gamma = mod.fit(y, pars, x=x)
    axes[1].plot(x, y, '-')
    axes[1].plot(x, out_gamma.best_fit, '-', label='Voigt Model\ngamma unconstrained')
    axes[1].legend()

    plt.show()
    # <end examples/doc_builtinmodels_peakmodels.py>


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.600 seconds)


.. _sphx_glr_download_examples_documentation_builtinmodels_peakmodels.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: builtinmodels_peakmodels.py <builtinmodels_peakmodels.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: builtinmodels_peakmodels.ipynb <builtinmodels_peakmodels.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
